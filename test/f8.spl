;; I
(template (I n_) [n_>0]
  (do $i0 = 0,$in.size-1
    $out($i0) = $in($i0)
	end
  ))

;; F 2
(template (F 2) [0 == 0]
  (
  	$out(1) = $in(0) - $in(1)
	$out(0) = $in(0) + $in(1)
  )
)

;; T(m, n)
(template (T m_ n_) [0 == 0]
  (
    do $i0 = 0,m_-1
	  $r0 = $i0
	  $out($i0) = W(m_,n_,$r0) * $in($i0)
	end
  )
)

;; L(m,n)
(template (L m_ n_) [n_ != 0]
  (
 	$r0 = m_ / n_
	do $i0 = 0,n_-1
		do $i1 = 0,$r0-1
			$out($r0) = $in($i0)
		end
	end
  )
)

;; compose (4)
(template (compose A_ B_ C_ D_)
  [ A_.in_size == B_.out_size && B_.in_size == C_.out_size && C_.in_size == D_.out_size ]
  ( 
    D_( $in, $t0, 0, 0, 1, 1 )
    C_( $t0, $t1, 0, 0, 1, 1 )
    B_( $t1, $t2, 0, 0, 1, 1 )
    A_( $t2, $out, 0, 0, 1, 1 )
  ))

;; compose (2)
(template (compose A_ B_)
  [ A_.in_size == B_.out_size ]
  ( 
    B_( $t1, $t2, 0, 0, 1, 1 )
    A_( $t2, $out, 0, 0, 1, 1 )
  ))

;; tensor
(template (tensor A_ B_) [ 0 == 0]
(
  do $i0 = 0, A_.in_size
    B_($in, $t0, 0, 0, 1, 1)
  end

  do $i1 = 0, B_.out_size
    A_($t0, $out, 0, 0, 1, 1)
  end
))

; common definition
;;(define F4
;;  (compose (tensor (F 2) (I 2) (T 4 2)
;;           (tensor (I 2) (F 2))) (L 4 2)))

;;(define F4
  (compose (tensor (F 2) (tensor (I 2) (tensor (T 4 2) (tensor (I 2) (F 2))))) (L 4 2))
;;)



; formula-1
; #subname formula1
; (compose (tensor (F 2) (I 4)) (T 8 4)
;         (tensor (I 2) F4) (L 8 2))

; formula-2
;;(compose (tensor F4 (I 2)) (T 8 2)
;;         (tensor (I 4) (F 2)) (L 8 4))



